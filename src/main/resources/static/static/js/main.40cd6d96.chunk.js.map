{"version":3,"sources":["actions/projectAction.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/projectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/projectBoard/Backlog.js","components/projectBoard/ProjectBoard.js","components/projectBoard/ProjectTasks/AddProjectTask.js","components/projectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/secureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","data","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","projectTask_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","propTypes","PropTypes","object","isRequired","func","response","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40cd6d96.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (window.confirm(\"Are you want to delete the project?\")) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectAction\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateButton from \"./Project/CreateButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectAction\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateButton />\r\n\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Register\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectAction\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, projectTask_id) {\r\n    this.props.deleteProjectTask(backlog_id, projectTask_id);\r\n  }\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-dark\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-secondary text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  projectTask_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${projectTask_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  projectTask_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(\r\n      `/api/backlog/${backlog_id}/${projectTask_id}`,\r\n      project_task\r\n    );\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (\r\n  backlog_id,\r\n  projectTask_id\r\n) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `You deleting project task ${projectTask_id}, this action cannot be undone.`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${projectTask_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: projectTask_id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n    let BoardContent;\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board.\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, projectTask_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, projectTask_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} / Task id:{\" \"}\r\n                {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create the account to join active projects or start your own.\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Register\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-success mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStoreToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStoreToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/projectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/projectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/projectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecureRoute from \"./securityUtils/secureRoute\";\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif (jwtToken) {\r\n  setJWTToken(jwtToken);\r\n  const decoded_jwtToken = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded_jwtToken\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded_jwtToken.exp < currentTime) {\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          {\r\n            // Public routes\r\n          }\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          {\r\n            // Private routes\r\n          }\r\n          <Switch>\r\n            <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <SecureRoute exact path=\"/addProject\" component={AddProject} />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/updateProject/:id\"\r\n              component={UpdateProject}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/projectBoard/:id\"\r\n              component={ProjectBoard}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/addProjectTask/:id\"\r\n              component={AddProjectTask}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/updateProjectTask/:backlog_id/:projectTask_id\"\r\n              component={UpdateProjectTask}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}